name: Push Artifact to JFrog

on:
  workflow_call:
    inputs:
      dotnet_version:
        description: '.NET SDK version to use'
        required: true
        type: string
      csproj_file:
        description: 'The path to the .csproj file'
        required: true
        type: string
      jfrog_artifact_path:
        description: 'The path where the artifact should be uploaded in JFrog'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup .NET SDK with version from input
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet_version }}

      # Step 3: Restore dependencies
      - name: Restore dependencies
        run: dotnet restore ${{ inputs.csproj_file }}

      # Step 4: Install JFrog CLI
      - name: Install JFrog CLI
        run: |
          curl -fL https://getcli.jfrog.io | sh
          chmod +x jfrog
          sudo mv jfrog /usr/local/bin/jfrog    

      # Step 5: Check JFrog CLI version
      - name: Check JFrog CLI version
        run: jfrog --version

      # Step 6: Configure JFrog CLI
      - name: Configure JFrog CLI
        run: |
          jfrog rt config --url "${{ secrets.JFROG_URL }}" \
                          --user "${{ secrets.JFROG_USERNAME }}" \
                          --apikey "${{ secrets.JFROG_API_KEY }}"

      # Step 7: Package the build
      - name: Package project
        run: dotnet publish -c Release -o ./output

      # Step 8: Upload the artifact to JFrog Artifactory
      - name: Upload .NET artifact to JFrog Artifactory
        run: |
          jfrog rt u "output/*" "${{ inputs.jfrog_artifact_path }}/${{ env.VERSION }}/" --build-name=dotnet-build --build-number=${{ github.run_id }}
